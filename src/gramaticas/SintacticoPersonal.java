
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Feb 16 18:24:04 CST 2020
//----------------------------------------------------

package gramaticas;

import java_cup.runtime.Symbol;
import operacionMysql.*;
import java.util.ArrayList;
import pollitos.PolloCSV;
import pollitos.DatosColumna;
import pollitos.Filtros;
import pollitos.ValoresInsercion;
import pollitos.Sentencias;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Feb 16 18:24:04 CST 2020
  */
public class SintacticoPersonal extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public SintacticoPersonal() {super();}

  /** Constructor which sets the default scanner. */
  public SintacticoPersonal(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SintacticoPersonal(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\167\000\002\002\004\000\002\002\004\000\002\002" +
    "\004\000\002\002\004\000\002\002\004\000\002\044\002" +
    "\000\002\013\005\000\002\045\002\000\002\013\006\000" +
    "\002\046\002\000\002\015\006\000\002\015\002\000\002" +
    "\016\004\000\002\016\003\000\002\047\002\000\002\023" +
    "\006\000\002\023\003\000\002\050\002\000\002\024\006" +
    "\000\002\024\004\000\002\026\004\000\002\051\002\000" +
    "\002\027\010\000\002\052\002\000\002\027\006\000\002" +
    "\053\002\000\002\030\010\000\002\054\002\000\002\030" +
    "\006\000\002\030\004\000\002\032\004\000\002\055\002" +
    "\000\002\033\011\000\002\056\002\000\002\033\007\000" +
    "\002\057\002\000\002\025\012\000\002\060\002\000\002" +
    "\025\010\000\002\025\003\000\002\025\004\000\002\041" +
    "\004\000\002\041\004\000\002\061\002\000\002\042\012" +
    "\000\002\062\002\000\002\042\010\000\002\063\002\000" +
    "\002\042\010\000\002\064\002\000\002\042\010\000\002" +
    "\065\002\000\002\042\010\000\002\066\002\000\002\042" +
    "\010\000\002\067\002\000\002\042\010\000\002\043\003" +
    "\000\002\043\003\000\002\043\002\000\002\070\002\000" +
    "\002\007\012\000\002\071\002\000\002\007\010\000\002" +
    "\072\002\000\002\007\010\000\002\073\002\000\002\007" +
    "\010\000\002\074\002\000\002\007\010\000\002\075\002" +
    "\000\002\007\010\000\002\076\002\000\002\007\010\000" +
    "\002\077\002\000\002\010\012\000\002\100\002\000\002" +
    "\010\010\000\002\101\002\000\002\010\010\000\002\102" +
    "\002\000\002\010\010\000\002\103\002\000\002\010\010" +
    "\000\002\104\002\000\002\010\010\000\002\105\002\000" +
    "\002\010\010\000\002\106\002\000\002\011\012\000\002" +
    "\107\002\000\002\011\010\000\002\110\002\000\002\011" +
    "\010\000\002\111\002\000\002\011\010\000\002\112\002" +
    "\000\002\011\010\000\002\113\002\000\002\011\010\000" +
    "\002\114\002\000\002\011\010\000\002\011\002\000\002" +
    "\115\002\000\002\012\012\000\002\116\002\000\002\012" +
    "\010\000\002\117\002\000\002\012\010\000\002\120\002" +
    "\000\002\012\010\000\002\121\002\000\002\012\010\000" +
    "\002\122\002\000\002\012\010\000\002\123\002\000\002" +
    "\012\010\000\002\012\002\000\002\005\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\374\000\012\004\005\007\004\010\010\012\006\001" +
    "\002\000\006\014\336\017\340\001\002\000\006\024\317" +
    "\033\320\001\002\000\006\006\313\024\312\001\002\000" +
    "\004\002\310\001\002\000\004\011\012\001\002\000\004" +
    "\002\ufffe\001\002\000\004\033\013\001\002\000\004\025" +
    "\015\001\002\000\004\002\uffe3\001\002\000\006\020\017" +
    "\035\016\001\002\000\010\006\uffe0\021\uffe0\023\uffe0\001" +
    "\002\000\004\033\020\001\002\000\004\020\uffe2\001\002" +
    "\000\004\020\022\001\002\000\010\006\026\021\023\023" +
    "\025\001\002\000\004\033\274\001\002\000\004\002\uffe1" +
    "\001\002\000\004\002\uffda\001\002\000\004\033\027\001" +
    "\002\000\016\025\034\026\033\027\032\030\035\031\036" +
    "\032\031\001\002\000\004\002\uffd9\001\002\000\004\035" +
    "\270\001\002\000\004\035\264\001\002\000\004\035\260" +
    "\001\002\000\006\020\247\035\246\001\002\000\004\035" +
    "\242\001\002\000\004\035\037\001\002\000\010\015\uffce" +
    "\016\uffce\023\uffce\001\002\000\010\015\042\016\045\023" +
    "\uffc6\001\002\000\004\023\uffc7\001\002\000\004\033\145" +
    "\001\002\000\004\023\uffc8\001\002\000\004\023\143\001" +
    "\002\000\004\033\046\001\002\000\016\025\052\026\051" +
    "\027\050\030\053\031\054\032\047\001\002\000\004\035" +
    "\140\001\002\000\004\035\135\001\002\000\004\035\132" +
    "\001\002\000\006\020\123\035\122\001\002\000\004\035" +
    "\117\001\002\000\004\035\055\001\002\000\006\016\uffaf" +
    "\023\uffaf\001\002\000\006\016\060\023\uff8c\001\002\000" +
    "\004\023\uffae\001\002\000\004\033\061\001\002\000\016" +
    "\025\065\026\064\027\063\030\066\031\067\032\062\001" +
    "\002\000\004\035\114\001\002\000\004\035\111\001\002" +
    "\000\004\035\106\001\002\000\006\020\077\035\076\001" +
    "\002\000\004\035\073\001\002\000\004\035\070\001\002" +
    "\000\006\016\uff92\023\uff92\001\002\000\006\016\060\023" +
    "\uff8c\001\002\000\004\023\uff91\001\002\000\006\016\uff90" +
    "\023\uff90\001\002\000\006\016\060\023\uff8c\001\002\000" +
    "\004\023\uff8f\001\002\000\006\016\uff98\023\uff98\001\002" +
    "\000\004\033\100\001\002\000\004\020\uff9a\001\002\000" +
    "\004\020\102\001\002\000\006\016\060\023\uff8c\001\002" +
    "\000\004\023\uff99\001\002\000\006\016\060\023\uff8c\001" +
    "\002\000\004\023\uff97\001\002\000\006\016\uff94\023\uff94" +
    "\001\002\000\006\016\060\023\uff8c\001\002\000\004\023" +
    "\uff93\001\002\000\006\016\uff96\023\uff96\001\002\000\006" +
    "\016\060\023\uff8c\001\002\000\004\023\uff95\001\002\000" +
    "\006\016\uff8e\023\uff8e\001\002\000\006\016\060\023\uff8c" +
    "\001\002\000\004\023\uff8d\001\002\000\006\016\uffad\023" +
    "\uffad\001\002\000\006\016\060\023\uff8c\001\002\000\004" +
    "\023\uffac\001\002\000\006\016\uffb5\023\uffb5\001\002\000" +
    "\004\033\124\001\002\000\004\020\uffb7\001\002\000\004" +
    "\020\126\001\002\000\006\016\060\023\uff8c\001\002\000" +
    "\004\023\uffb6\001\002\000\006\016\060\023\uff8c\001\002" +
    "\000\004\023\uffb4\001\002\000\006\016\uffb1\023\uffb1\001" +
    "\002\000\006\016\060\023\uff8c\001\002\000\004\023\uffb0" +
    "\001\002\000\006\016\uffb3\023\uffb3\001\002\000\006\016" +
    "\060\023\uff8c\001\002\000\004\023\uffb2\001\002\000\006" +
    "\016\uffab\023\uffab\001\002\000\006\016\060\023\uff8c\001" +
    "\002\000\004\023\uffaa\001\002\000\004\002\uff8b\001\002" +
    "\000\004\002\uffcd\001\002\000\016\025\151\026\150\027" +
    "\147\030\152\031\153\032\146\001\002\000\004\035\237" +
    "\001\002\000\004\035\234\001\002\000\004\035\231\001" +
    "\002\000\006\020\222\035\221\001\002\000\004\035\216" +
    "\001\002\000\004\035\154\001\002\000\006\015\uffbd\023" +
    "\uffbd\001\002\000\006\015\157\023\uff9b\001\002\000\004" +
    "\023\uffbc\001\002\000\004\033\160\001\002\000\016\025" +
    "\164\026\163\027\161\030\165\031\166\032\162\001\002" +
    "\000\004\035\213\001\002\000\004\035\210\001\002\000" +
    "\004\035\205\001\002\000\006\020\176\035\175\001\002" +
    "\000\004\035\172\001\002\000\004\035\167\001\002\000" +
    "\006\015\uffa1\023\uffa1\001\002\000\006\015\157\023\uff9b" +
    "\001\002\000\004\023\uffa0\001\002\000\006\015\uff9f\023" +
    "\uff9f\001\002\000\006\015\157\023\uff9b\001\002\000\004" +
    "\023\uff9e\001\002\000\006\015\uffa7\023\uffa7\001\002\000" +
    "\004\033\177\001\002\000\004\020\uffa9\001\002\000\004" +
    "\020\201\001\002\000\006\015\157\023\uff9b\001\002\000" +
    "\004\023\uffa8\001\002\000\006\015\157\023\uff9b\001\002" +
    "\000\004\023\uffa6\001\002\000\006\015\uffa3\023\uffa3\001" +
    "\002\000\006\015\157\023\uff9b\001\002\000\004\023\uffa2" +
    "\001\002\000\006\015\uff9d\023\uff9d\001\002\000\006\015" +
    "\157\023\uff9b\001\002\000\004\023\uff9c\001\002\000\006" +
    "\015\uffa5\023\uffa5\001\002\000\006\015\157\023\uff9b\001" +
    "\002\000\004\023\uffa4\001\002\000\006\015\uffbb\023\uffbb" +
    "\001\002\000\006\015\157\023\uff9b\001\002\000\004\023" +
    "\uffba\001\002\000\006\015\uffc3\023\uffc3\001\002\000\004" +
    "\033\223\001\002\000\004\020\uffc5\001\002\000\004\020" +
    "\225\001\002\000\006\015\157\023\uff9b\001\002\000\004" +
    "\023\uffc4\001\002\000\006\015\157\023\uff9b\001\002\000" +
    "\004\023\uffc2\001\002\000\006\015\uffbf\023\uffbf\001\002" +
    "\000\006\015\157\023\uff9b\001\002\000\004\023\uffbe\001" +
    "\002\000\006\015\uffc1\023\uffc1\001\002\000\006\015\157" +
    "\023\uff9b\001\002\000\004\023\uffc0\001\002\000\006\015" +
    "\uffb9\023\uffb9\001\002\000\006\015\157\023\uff9b\001\002" +
    "\000\004\023\uffb8\001\002\000\010\015\uffcc\016\uffcc\023" +
    "\uffcc\001\002\000\010\015\042\016\045\023\uffc6\001\002" +
    "\000\004\023\143\001\002\000\004\002\uffcb\001\002\000" +
    "\010\015\uffd4\016\uffd4\023\uffd4\001\002\000\004\033\250" +
    "\001\002\000\004\020\uffd6\001\002\000\004\020\252\001" +
    "\002\000\010\015\042\016\045\023\uffc6\001\002\000\004" +
    "\023\143\001\002\000\004\002\uffd5\001\002\000\010\015" +
    "\042\016\045\023\uffc6\001\002\000\004\023\143\001\002" +
    "\000\004\002\uffd3\001\002\000\010\015\uffd0\016\uffd0\023" +
    "\uffd0\001\002\000\010\015\042\016\045\023\uffc6\001\002" +
    "\000\004\023\143\001\002\000\004\002\uffcf\001\002\000" +
    "\010\015\uffd2\016\uffd2\023\uffd2\001\002\000\010\015\042" +
    "\016\045\023\uffc6\001\002\000\004\023\143\001\002\000" +
    "\004\002\uffd1\001\002\000\010\015\uffca\016\uffca\023\uffca" +
    "\001\002\000\010\015\042\016\045\023\uffc6\001\002\000" +
    "\004\023\143\001\002\000\004\002\uffc9\001\002\000\004" +
    "\025\275\001\002\000\006\020\277\035\276\001\002\000" +
    "\010\006\uffdc\021\uffdc\023\uffdc\001\002\000\004\033\300" +
    "\001\002\000\004\020\uffde\001\002\000\004\020\302\001" +
    "\002\000\010\006\026\021\023\023\025\001\002\000\004" +
    "\002\uffdd\001\002\000\010\006\026\021\023\023\025\001" +
    "\002\000\004\002\uffdb\001\002\000\010\006\026\021\023" +
    "\023\025\001\002\000\004\002\uffdf\001\002\000\004\002" +
    "\001\001\002\000\004\002\ufffd\001\002\000\004\023\315" +
    "\001\002\000\004\033\027\001\002\000\004\002\uffd7\001" +
    "\002\000\004\002\uffd8\001\002\000\004\002\000\001\002" +
    "\000\006\006\ufffc\023\ufffc\001\002\000\010\006\ufffa\021" +
    "\ufffa\023\ufffa\001\002\000\010\006\ufff6\021\322\023\ufff6" +
    "\001\002\000\004\033\330\001\002\000\006\006\324\023" +
    "\325\001\002\000\004\033\027\001\002\000\004\002\ufff4" +
    "\001\002\000\004\002\ufff9\001\002\000\004\002\ufff5\001" +
    "\002\000\010\006\ufff8\021\ufff8\023\ufff8\001\002\000\010" +
    "\006\ufff6\021\322\023\ufff6\001\002\000\006\006\ufff7\023" +
    "\ufff7\001\002\000\006\006\324\023\325\001\002\000\004" +
    "\002\ufffb\001\002\000\004\002\ufff1\001\002\000\004\017" +
    "\352\001\002\000\004\002\uffff\001\002\000\004\033\341" +
    "\001\002\000\006\021\ufff3\022\ufff3\001\002\000\006\021" +
    "\343\022\345\001\002\000\004\033\347\001\002\000\004" +
    "\002\ufff2\001\002\000\004\014\336\001\002\000\004\002" +
    "\uffee\001\002\000\006\021\ufff0\022\ufff0\001\002\000\006" +
    "\021\343\022\345\001\002\000\004\002\uffef\001\002\000" +
    "\006\020\355\035\354\001\002\000\004\002\uffed\001\002" +
    "\000\006\021\uffea\022\uffea\001\002\000\004\033\356\001" +
    "\002\000\004\020\uffec\001\002\000\004\020\360\001\002" +
    "\000\006\021\361\022\362\001\002\000\006\020\366\035" +
    "\365\001\002\000\004\023\364\001\002\000\004\002\uffeb" +
    "\001\002\000\004\002\uffe4\001\002\000\006\021\uffe6\022" +
    "\uffe6\001\002\000\004\033\367\001\002\000\004\020\uffe8" +
    "\001\002\000\004\020\371\001\002\000\006\021\361\022" +
    "\362\001\002\000\004\002\uffe7\001\002\000\006\021\361" +
    "\022\362\001\002\000\004\002\uffe5\001\002\000\006\021" +
    "\361\022\362\001\002\000\004\002\uffe9\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\374\000\004\002\006\001\001\000\006\023\336\026" +
    "\334\001\001\000\004\013\315\001\001\000\004\041\310" +
    "\001\001\000\002\001\001\000\004\032\010\001\001\000" +
    "\002\001\001\000\004\033\013\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\056\305\001" +
    "\001\000\002\001\001\000\004\055\020\001\001\000\002" +
    "\001\001\000\004\025\023\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\042\027\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\065\037\001\001\000" +
    "\010\007\042\010\040\043\043\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\143\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\103\055\001\001" +
    "\000\004\012\056\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\121\070\001\001\000\004\012\071" +
    "\001\001\000\002\001\001\000\004\122\073\001\001\000" +
    "\004\012\074\001\001\000\002\001\001\000\004\116\103" +
    "\001\001\000\002\001\001\000\004\115\100\001\001\000" +
    "\002\001\001\000\004\012\102\001\001\000\002\001\001" +
    "\000\004\012\104\001\001\000\002\001\001\000\004\120" +
    "\106\001\001\000\004\012\107\001\001\000\002\001\001" +
    "\000\004\117\111\001\001\000\004\012\112\001\001\000" +
    "\002\001\001\000\004\123\114\001\001\000\004\012\115" +
    "\001\001\000\002\001\001\000\004\104\117\001\001\000" +
    "\004\012\120\001\001\000\002\001\001\000\004\100\127" +
    "\001\001\000\002\001\001\000\004\077\124\001\001\000" +
    "\002\001\001\000\004\012\126\001\001\000\002\001\001" +
    "\000\004\012\130\001\001\000\002\001\001\000\004\102" +
    "\132\001\001\000\004\012\133\001\001\000\002\001\001" +
    "\000\004\101\135\001\001\000\004\012\136\001\001\000" +
    "\002\001\001\000\004\105\140\001\001\000\004\012\141" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\074\154\001\001\000\004\011\155" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\112\167\001\001\000\004\011\170\001\001\000\002" +
    "\001\001\000\004\113\172\001\001\000\004\011\173\001" +
    "\001\000\002\001\001\000\004\107\202\001\001\000\002" +
    "\001\001\000\004\106\177\001\001\000\002\001\001\000" +
    "\004\011\201\001\001\000\002\001\001\000\004\011\203" +
    "\001\001\000\002\001\001\000\004\111\205\001\001\000" +
    "\004\011\206\001\001\000\002\001\001\000\004\114\210" +
    "\001\001\000\004\011\211\001\001\000\002\001\001\000" +
    "\004\110\213\001\001\000\004\011\214\001\001\000\002" +
    "\001\001\000\004\075\216\001\001\000\004\011\217\001" +
    "\001\000\002\001\001\000\004\071\226\001\001\000\002" +
    "\001\001\000\004\070\223\001\001\000\002\001\001\000" +
    "\004\011\225\001\001\000\002\001\001\000\004\011\227" +
    "\001\001\000\002\001\001\000\004\073\231\001\001\000" +
    "\004\011\232\001\001\000\002\001\001\000\004\072\234" +
    "\001\001\000\004\011\235\001\001\000\002\001\001\000" +
    "\004\076\237\001\001\000\004\011\240\001\001\000\002" +
    "\001\001\000\004\066\242\001\001\000\010\007\042\010" +
    "\040\043\243\001\001\000\004\005\244\001\001\000\002" +
    "\001\001\000\004\062\254\001\001\000\002\001\001\000" +
    "\004\061\250\001\001\000\002\001\001\000\010\007\042" +
    "\010\040\043\252\001\001\000\004\005\253\001\001\000" +
    "\002\001\001\000\010\007\042\010\040\043\255\001\001" +
    "\000\004\005\256\001\001\000\002\001\001\000\004\064" +
    "\260\001\001\000\010\007\042\010\040\043\261\001\001" +
    "\000\004\005\262\001\001\000\002\001\001\000\004\063" +
    "\264\001\001\000\010\007\042\010\040\043\265\001\001" +
    "\000\004\005\266\001\001\000\002\001\001\000\004\067" +
    "\270\001\001\000\010\007\042\010\040\043\271\001\001" +
    "\000\004\005\272\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\060\303\001\001\000\002" +
    "\001\001\000\004\057\300\001\001\000\002\001\001\000" +
    "\004\025\302\001\001\000\002\001\001\000\004\025\304" +
    "\001\001\000\002\001\001\000\004\025\306\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\042\313\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\044\332\001\001" +
    "\000\004\045\320\001\001\000\004\015\322\001\001\000" +
    "\002\001\001\000\004\016\325\001\001\000\004\042\326" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\046\330\001\001\000\004\015\331\001\001" +
    "\000\002\001\001\000\004\016\333\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\027\352\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\047\341\001\001\000" +
    "\004\024\343\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\345\001\001\000\002\001\001\000\004\050" +
    "\347\001\001\000\004\024\350\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\052\374\001" +
    "\001\000\002\001\001\000\004\051\356\001\001\000\002" +
    "\001\001\000\004\030\362\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\054\372\001\001\000\002\001\001\000\004\053\367\001" +
    "\001\000\002\001\001\000\004\030\371\001\001\000\002" +
    "\001\001\000\004\030\373\001\001\000\002\001\001\000" +
    "\004\030\375\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintacticoPersonal$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintacticoPersonal$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintacticoPersonal$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public int accionPosible; 
    public int noColumnaInsercion = 0;
    public int noValorInsercion = 0;

    ArrayList<PolloCSV> list;
    ArrayList<Filtros> listFiltro;
    ArrayList<String> opcion;
    ArrayList<Integer> opcionesPrincipales;
    ArrayList<ValoresInsercion> listadoValores;
    ArrayList<Sentencias> listadoDatos;

    ArrayList<DatosColumna> listadoColumnas;

    OperacionEliminar eliminacion;
    OperacionInsertar insercion;
    OperacionSeleccionar seleccion;

    public SintacticoPersonal(AnalizadorLexico4 lex, ArrayList<PolloCSV> list, ArrayList<DatosColumna> listadoColumnas, ArrayList<Filtros> listFiltro, ArrayList<String> opcion, ArrayList<Integer> opcionesPrincipales, ArrayList<ValoresInsercion> listadoValores, ArrayList<Sentencias> listadoDatos){
        super(lex);
        this.list = list;
        this.listadoColumnas = listadoColumnas;
        this.listFiltro = listFiltro;
        this.opcion = opcion;
        this.opcionesPrincipales = opcionesPrincipales;
        this.listadoValores = listadoValores;
        this.listadoDatos = listadoDatos;
    }

    public void setAccion(String tipo, String mensaje, String accion){
        System.out.println(tipo+" "+mensaje);
    }

    public void syntax_error(Symbol s){
        setAccion("ERROR", "Error Sintaxis token: "+s.right,"");
    }

    public void mostrarValores(String columna){
        
    }

    public void verAccion(int accionPosible){
        System.out.println(accionPosible);
    }
    
    public ArrayList<String> listarDatos(ArrayList<String> listadoColumnas, Object nuevoDato){
        listadoColumnas.add((String)nuevoDato);
        return listadoColumnas;
    }
    
    public ArrayList<DatosColumna> listarColumnas(ArrayList<DatosColumna> listadoColumnas, Object dato, String tipo){
        DatosColumna columna = new DatosColumna();
        columna.setNombreColumna(dato);
        columna.setTipo(tipo);
        listadoColumnas.add(columna);
        return listadoColumnas;
    }

    public ArrayList<Filtros> listarFiltros(ArrayList<Filtros> list, Object filtro, Object nombreColumna, int operacion, int tipoOperacion){
        Filtros pollito = new Filtros();
        pollito.setFiltro(filtro);
        pollito.setNombreColumna(nombreColumna);
        pollito.setPalabra_numero(operacion);
        pollito.setTipoOperacion(tipoOperacion);
        list.add(pollito);
        return list;
    }

    public int retornarOpcion(int opcion, int valor){
        opcion = valor;
        return opcion;
    }

    public ArrayList<Integer> listarOpPrincipales(ArrayList<Integer> list, int opcion){
        list.add(opcion);
        return list;
    }


    //METODOS PARA LA OPERACION INSERTAR 
    public ArrayList<DatosColumna> listarInsercion(ArrayList<DatosColumna> listadoColumnas, Object dato, int noColumna){
        DatosColumna columna = new DatosColumna();
        columna.setNombreColumna(dato);
        columna.setNumColumnaInsercion(noColumna);
        listadoColumnas.add(columna);
        return listadoColumnas;
    }
    

    public ArrayList<ValoresInsercion> listarValores(ArrayList<ValoresInsercion> listadoValores, Object dato, int noValor){
        ValoresInsercion valor = new ValoresInsercion();
        valor.setDato(dato);
        valor.setNoDatoInsercion(noValor);
        listadoValores.add(valor);
        return listadoValores;
    }

    //METODOS PARA LA OPERACION ACTUALIZAR 
    
    public ArrayList<Sentencias> listarNuevosDatos(ArrayList<Sentencias> listadoDatos, Object nombreColumna, Object nuevoDato, int tipoDato){
        Sentencias sentencia = new Sentencias();
        sentencia.setNombreColumna(nombreColumna);
        sentencia.setNuevoDato(nuevoDato);
        sentencia.setPalabra_numero(tipoDato);
        listadoDatos.add(sentencia);
        return listadoDatos;

    }



    

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$SintacticoPersonal$actions {
  private final SintacticoPersonal parser;

  /** Constructor */
  CUP$SintacticoPersonal$actions(SintacticoPersonal parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$SintacticoPersonal$do_action(
    int                        CUP$SintacticoPersonal$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoPersonal$parser,
    java.util.Stack            CUP$SintacticoPersonal$stack,
    int                        CUP$SintacticoPersonal$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintacticoPersonal$result;

      /* select the action based on the action number */
      switch (CUP$SintacticoPersonal$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // ad ::= PUNTO_COMA 
            {
              Object RESULT =null;
		parser.verAccion(parser.accionPosible); System.out.println(parser.listFiltro.size());  System.out.println(parser.listadoColumnas.size());      
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ad",3, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // ai ::= 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // ai ::= OR PALABRA MAYOR_MENOR NUMERO NT$47 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$47
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // NT$47 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 6);  parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$47",81, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // ai ::= OR PALABRA MENOR_IGUAL NUMERO NT$46 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$46
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // NT$46 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 5); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$46",80, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // ai ::= OR PALABRA MAYOR_IGUAL NUMERO NT$45 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$45
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // NT$45 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 4); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$45",79, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // ai ::= OR PALABRA MENOR_QUE NUMERO NT$44 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$44
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // NT$44 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 3); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$44",78, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // ai ::= OR PALABRA MAYOR_QUE NUMERO NT$43 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$43
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // NT$43 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 2); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$43",77, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ai ::= OR PALABRA IGUAL NUMERO NT$42 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$42
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // NT$42 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 1); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$42",76, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // ai ::= OR PALABRA IGUAL COMILLA PALABRA NT$41 COMILLA ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$41
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ai",8, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // NT$41 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 1, 0); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$41",75, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ah ::= 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ah ::= AND PALABRA MAYOR_MENOR NUMERO NT$40 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$40
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // NT$40 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 6); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$40",74, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ah ::= AND PALABRA MENOR_IGUAL NUMERO NT$39 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$39
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // NT$39 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 5); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$39",73, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ah ::= AND PALABRA MAYOR_IGUAL NUMERO NT$38 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$38
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // NT$38 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 4); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$38",72, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // ah ::= AND PALABRA MENOR_QUE NUMERO NT$37 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$37
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // NT$37 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 3); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$37",71, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ah ::= AND PALABRA MAYOR_QUE NUMERO NT$36 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$36
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // NT$36 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 2); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$36",70, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ah ::= AND PALABRA IGUAL NUMERO NT$35 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$35
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // NT$35 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 1); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$35",69, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ah ::= AND PALABRA IGUAL COMILLA PALABRA NT$34 COMILLA ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$34
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ah",7, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // NT$34 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 1, 0); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$34",68, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ag ::= OR PALABRA MAYOR_MENOR NUMERO NT$33 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$33
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ag",6, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NT$33 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 6); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$33",67, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ag ::= OR PALABRA MENOR_IGUAL NUMERO NT$32 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$32
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ag",6, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // NT$32 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 5); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$32",66, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ag ::= OR PALABRA MAYOR_IGUAL NUMERO NT$31 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$31
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ag",6, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // NT$31 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 4); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$31",65, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ag ::= OR PALABRA MENOR_QUE NUMERO NT$30 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$30
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ag",6, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // NT$30 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 3); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$30",64, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ag ::= OR PALABRA MAYOR_QUE NUMERO NT$29 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$29
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ag",6, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // NT$29 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 2); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$29",63, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ag ::= OR PALABRA IGUAL NUMERO NT$28 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$28
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ag",6, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // NT$28 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 1); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$28",62, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ag ::= OR PALABRA IGUAL COMILLA PALABRA NT$27 COMILLA ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$27
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("ag",6, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // NT$27 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 1, 0); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$27",61, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // af ::= AND PALABRA MAYOR_MENOR NUMERO NT$26 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$26
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("af",5, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // NT$26 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 6); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$26",60, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // af ::= AND PALABRA MENOR_IGUAL NUMERO NT$25 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$25
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("af",5, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // NT$25 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 5); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$25",59, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // af ::= AND PALABRA MAYOR_IGUAL NUMERO NT$24 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$24
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("af",5, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // NT$24 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 4); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$24",58, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // af ::= AND PALABRA MENOR_QUE NUMERO NT$23 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$23
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("af",5, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // NT$23 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 3); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$23",57, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // af ::= AND PALABRA MAYOR_QUE NUMERO NT$22 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$22
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("af",5, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NT$22 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 2); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$22",56, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // af ::= AND PALABRA IGUAL NUMERO NT$21 ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$21
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("af",5, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // NT$21 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 1); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$21",55, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // af ::= AND PALABRA IGUAL COMILLA PALABRA NT$20 COMILLA ah 
            {
              Object RESULT =null;
              // propagate RESULT from NT$20
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("af",5, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // NT$20 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 1, 0); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$20",54, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // z ::= 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("z",33, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // z ::= ag 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("z",33, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // z ::= af 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("z",33, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // y ::= PALABRA MAYOR_MENOR NUMERO NT$19 z ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$19
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("y",32, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // NT$19 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 6); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$19",53, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // y ::= PALABRA MENOR_IGUAL NUMERO NT$18 z ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$18
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("y",32, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // NT$18 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 5); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$18",52, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // y ::= PALABRA MAYOR_IGUAL NUMERO NT$17 z ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$17
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("y",32, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NT$17 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 4); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$17",51, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // y ::= PALABRA MENOR_QUE NUMERO NT$16 z ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("y",32, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // NT$16 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 3); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$16",50, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // y ::= PALABRA MAYOR_QUE NUMERO NT$15 z ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$15
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("y",32, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$15 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 2); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$15",49, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // y ::= PALABRA IGUAL NUMERO NT$14 z ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$14
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("y",32, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$14 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 2, 1); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$14",48, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // y ::= PALABRA IGUAL COMILLA PALABRA NT$13 COMILLA z ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("y",32, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // NT$13 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarFiltros(parser.listFiltro, e, a, 1, 0); parser.listarColumnas(parser.listadoColumnas, a, "Filtro"); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$13",47, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // x ::= FILTRAR y 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("x",31, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // x ::= ASTERISCO PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("x",31, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // l ::= FILTRAR y 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("l",19, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // l ::= PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("l",19, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // l ::= COMA PALABRA IGUAL NUMERO NT$12 l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("l",19, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // NT$12 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarNuevosDatos(parser.listadoDatos, a, e, 2); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$12",46, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // l ::= COMA PALABRA IGUAL COMILLA PALABRA NT$11 COMILLA l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$11
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("l",19, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-7)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // NT$11 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
parser.listarNuevosDatos(parser.listadoDatos, a, e, 1); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$11",45, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // r ::= PALABRA IGUAL NUMERO NT$10 l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("r",25, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-4)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // NT$10 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarNuevosDatos(parser.listadoDatos, a, e, 2); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$10",44, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // r ::= PALABRA IGUAL COMILLA PALABRA NT$9 COMILLA l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$9
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("r",25, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-6)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // NT$9 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarNuevosDatos(parser.listadoDatos, a, e, 1); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$9",43, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // q ::= ASIGNAR r 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("q",24, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // o ::= AGRUPACION_B PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("o",22, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // o ::= COMA NUMERO NT$8 o 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("o",22, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$8 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.noValorInsercion++;  parser.listarValores(parser.listadoValores, e, parser.noValorInsercion);  
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$8",42, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // o ::= COMA COMILLA PALABRA NT$7 COMILLA o 
            {
              Object RESULT =null;
              // propagate RESULT from NT$7
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("o",22, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // NT$7 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.noValorInsercion++;  parser.listarValores(parser.listadoValores, e, parser.noValorInsercion); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$7",41, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // n ::= AGRUPACION_A NUMERO NT$6 o 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("n",21, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NT$6 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Integer e = (Integer)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.noValorInsercion++;  parser.listarValores(parser.listadoValores, e, parser.noValorInsercion); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$6",40, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // n ::= AGRUPACION_A COMILLA PALABRA NT$5 COMILLA o 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("n",21, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-5)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$5 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.noValorInsercion++;  parser.listarValores(parser.listadoValores, e, parser.noValorInsercion);    
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$5",39, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // m ::= VALORES n 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("m",20, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // k ::= AGRUPACION_B m 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("k",18, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // k ::= COMA PALABRA NT$4 k 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("k",18, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$4 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.noColumnaInsercion++; parser.listarInsercion(parser.listadoColumnas, e, parser.noColumnaInsercion); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$4",38, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // j ::= m 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("j",17, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // j ::= AGRUPACION_A PALABRA NT$3 k 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("j",17, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$3 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.noColumnaInsercion++; parser.listarInsercion(parser.listadoColumnas, e, parser.noColumnaInsercion); 
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$3",37, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // e ::= PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("e",12, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // e ::= FILTRAR y 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("e",12, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // d ::= 
            {
              Object RESULT =null;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("d",11, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // d ::= COMA PALABRA NT$2 d 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("d",11, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // NT$2 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
parser.listarColumnas(parser.listadoColumnas, e, "Seleccion");
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$2",36, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // b ::= PALABRA NT$1 d e 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("b",9, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NT$1 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.peek()).value;
 parser.listarDatos(parser.opcion, "opcion2");  parser.listarColumnas(parser.listadoColumnas, e, "Seleccion");   
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$1",35, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // b ::= ASTERISCO NT$0 e 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;

              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("b",9, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-2)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NT$0 ::= 
            {
              Object RESULT =null;
 parser.listarDatos(parser.opcion, "opcion1");     
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("NT$0",34, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // aa ::= ELIMINAR x 
            {
              Object RESULT =null;
		parser.listarOpPrincipales(parser.opcionesPrincipales, 4);
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("aa",0, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // aa ::= ACTUALIZAR q 
            {
              Object RESULT =null;
		parser.listarOpPrincipales(parser.opcionesPrincipales, 3);
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("aa",0, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // aa ::= INSERTAR j 
            {
              Object RESULT =null;
		parser.listarOpPrincipales(parser.opcionesPrincipales, 2);
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("aa",0, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // aa ::= SELECCIONAR b 
            {
              Object RESULT =null;
		parser.listarOpPrincipales(parser.opcionesPrincipales, 1);
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("aa",0, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          return CUP$SintacticoPersonal$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= aa EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)).value;
		RESULT = start_val;
              CUP$SintacticoPersonal$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.elementAt(CUP$SintacticoPersonal$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoPersonal$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SintacticoPersonal$parser.done_parsing();
          return CUP$SintacticoPersonal$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

